[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "It contains lectures and exercises on Ancient DNA data analysis from a workshop conducted at the University of Siegen, in collaboration with the University of Bonn, on September 6-7, 2022."
  },
  {
    "objectID": "exercises/exercise_1_1_alignment.html",
    "href": "exercises/exercise_1_1_alignment.html",
    "title": "Exercise 1.1: Alignment",
    "section": "",
    "text": "Tip\n\n\n\nOpen an empty file in RStudio by clicking on the button with the little white rectangle and the green plus side on the top left of the App, simply selecting “Text file”, and copy paste the Reference genome and the sequences below in. Then use spaces to bring the sequences to the right place along the reference.\n\n\n\nReference_Genome: \nAACACTTGGTCACTGGGGTTTACACTGGTACACTGGACTACCCTGGGTACACTGACTACGACTACGACTACGTTTACCCCAATTT\n\nSequencing_Reads:     \nGTTTACACTGGTGCACTGGACTACCCTG\nACACTGGTGCACTGGACTACCCTGGGTACACTGACTAC\nTGGTGCACTGGACTACCCTGGGTACACT\nGACTACCCTGGGTACACTGACTACGA\nGGTACACTGACTACGACTACGACTACGTT"
  },
  {
    "objectID": "exercises/exercise_1_2_tview.html",
    "href": "exercises/exercise_1_2_tview.html",
    "title": "Exercise 1.2: Visualising BAM files",
    "section": "",
    "text": "Tip\n\n\n\n\nUse your cursors to move left and right\nUse space or Ctrl-L to make bigger jumps to the right\nUse or Ctrl-H for bigger jumps to the left.\nType ? to get a quick help\nType q to quit."
  },
  {
    "objectID": "exercises/exercise_1_3_sex_determination.html",
    "href": "exercises/exercise_1_3_sex_determination.html",
    "title": "Exercise 1.3: Sex determination",
    "section": "",
    "text": "Import the data\n\ndat <- readr::read_tsv(\"data/SexDet.txt\", col_types = \"ciiiiii\")\n\nView it:\n\ndat\n\n# A tibble: 35 × 7\n   Sample   TotalAut TotalX TotalY   NrAut   NrX   NrY\n   <chr>       <int>  <int>  <int>   <int> <int> <int>\n 1 SAMPLE4   1150639  49704  32670 1708520 30367 25196\n 2 SAMPLE8   1150639  49704  32670    8774   156   104\n 3 SAMPLE9   1150639  49704  32670 1299329 46274   341\n 4 SAMPLE12  1150639  49704  32670  867988 30079   216\n 5 SAMPLE13  1150639  49704  32670  541696 19214   122\n 6 SAMPLE14  1150639  49704  32670 2386212 41339 33781\n 7 SAMPLE15  1150639  49704  32670  412062  7074  6077\n 8 SAMPLE17  1150639  49704  32670 1670276 29177 23905\n 9 SAMPLE19  1150639  49704  32670 1599366 27127 21984\n10 SAMPLE22  1150639  49704  32670  259069  9302    64\n# … with 25 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\nInteractively explore it, by clicking on “dat” in the “Environment” tab in the upper right pane in RStudio.\nHere is an explanation for the columns:\n\nSample - The name of the sample\nTotalAut - The total number of autosomal positions analysed (chromosomes 1-22)\nTotalX - The total number of X-chromosomal positions analysed\nTotalY - The total number of Y-chromosomal positions analysed\nNrAut - The total number of reads mapping to the autosomal positions\nNrX - The total number of reads mapping to the X-chromosomal positions\nNrY - The total number of reads mapping to the Y-chromosomal positions\n\nLet’s try a first simple plot. We first need to load the ggplot2 library, and while we’re at it, we also load the magrittr library to have the pipe operator %>% available for later:\n\nlibrary(ggplot2)\nlibrary(magrittr)\n\nggplot(dat) + geom_point(aes(x = NrAut, y = NrX))\n\n\n\n\nQuestion: Do you have an idea why there are two lines? Exercise: Play around with this plot. For example, change the code so that you’re plotting NrY (and not NrX) against NrAut, and also NrX vs NrY. Do you understand what you’re seeing?\nOf course, the three categories, X, Y and Autosomes have vastly different sizes. In order to compare the numbers, we need to convert them to something like “average coverage”, which we achieve by normalising the read numbers by the total number of analysed positions in each category. Here is a dataset that adds this normalisation:\n\ndat2 <- dat %>%\n  dplyr::mutate(\n    covAut = NrAut / TotalAut,\n    covX   = NrX   / TotalX,\n    covY   = NrY   / TotalY\n  )\n\nThe number of reads mapping to different chromosomes (the variables starting with Nr) are critically dependant on genomic coverage: The more human fragments have been sequenced, the higher the numbers in these variables.\nWe can now again try our simple plot from above, this time using dat2 and the cov... variables:\n\nggplot(dat2) + geom_point(aes(x = covAut, y = covX))\n\n\n\n\nExercise: Play again with this plot, and change the axes using covAut, covX and covY. Not much has changed, besides the values on the axes, which now reflect genomic coverage instead of total number of reads.\nThere still is the problem that samples have vastly different coverages, simply due to different degrees of preservation and different sequencing depths (and some have undergone capture, some haven’t). How do we make these numbers comparable?\nThe easiest approach is to take the autosomal coverage to normalise the X and Y coverage on.\nFor example, here is the distribution of relative X-coverages:\n\nggplot(dat2) + geom_histogram(aes(x = covX / covAut))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nExercise: Plot a second histogram with the relative Y coverage.\nFinally, try to copy the code from the scatter plots above and plot relative X vs. relative Y coverage. Can you identify the males and female samples?"
  },
  {
    "objectID": "exercises/exercise_2_1_abba_baba.html",
    "href": "exercises/exercise_2_1_abba_baba.html",
    "title": "Exercise 2.1: Abba Baba test",
    "section": "",
    "text": "A genotype matrix looks conceptually like this:\nSNPs / Individuals -> Ind1 Ind2 Ind3 Ind4 ...\n |\n V\nSnp1                   G    A    A    G   . . .\nSnp2                   G    T    T    C   . . .\nSnp3                   T    A    T    G   . . .\nSnp4                   G    A    A    C   . . .\n .                     .    .    .    .   .\n .                     .    .    .    .     .\n .                     .    .    .    .       .\nWe typically deal with dozens to tens of thousands of individuals, and hundreds of thousands to several million SNPs. In practice, to make this matrix easier computable, it is divided into three files:\n\nA file denoting the list of individuals (i.e. the column names)\nA file denoting the list of SNPs (i.e. the row names)\nA genotype matrix, containing the actual genotype data.\n\nLet’s take a look at the individual file first:\n\ncat data/Abba_Baba_dataset/Abba_Baba_dataset.ind\n\nNA12878.SG  F   CEU.SG\nNA19240.SG  F   YRI.SG\nVindijaG1_final_provisional.SG  F   VindijaG1_Neanderthal.SG\nChimp.REF   M   Chimp.REF\n\n\nwhere you see four individuals. In each row, the first column denotes the sample name, the second column the sex, and the third column a group label, which is irrelevant for now. Here is a quick summary for the four:\n\nNA12878.SG is a present-day human from the US (with European ancestry).\nNA19240.SG is a present-day human from Nigeria.\nVindijaG1_final_provisional.SG is a Neanderthaler from Vindija Cave in Croatia, who died approximately 50,000 years ago.\nChimp.REF is the Chimpanzee reference genome.\n\nNext, let’s view the first few SNPs:\n\nhead data/Abba_Baba_dataset/Abba_Baba_dataset.snp\n\nrs3094315   1   2.013e-2    752566  G   A\nrs12124819  1   2.0242e-2   776546  G   A\nrs28765502  1   2.2137e-2   832918  C   T\nrs7419119   1   2.2518e-2   842013  G   T\nrs950122    1   2.272e-2    846864  C   G\nrs113171913 1   2.3436e-2   869303  T   C\nrs13302957  1   2.4116e-2   891021  G   A\nrs59986066  1   2.4183e-2   893462  C   T\nrs112905931 1   2.426e-2    896271  T   C\nrs6696609   1   2.4457e-2   903426  T   C\n\n\nEach row contains a SNP, with an ID (first column), chromosome (second column), position in base-pairs along the chromosome (fourth column), and the two alleles present at this SNP (last two columns).\nLet’s see how many SNPs there are:\n\ncat data/Abba_Baba_dataset/Abba_Baba_dataset.snp | wc -l\n\n 1233013\n\n\nSo around 1.2 million SNPs.\nLet’s now take a look at the genotype file:\n\nhead data/Abba_Baba_dataset/Abba_Baba_dataset.geno\n\n0009\n0099\n0299\n0009\n0090\n0000\n0092\n9999\n9909\n0009\n\n\nHere, we have genotype data encoded in the EIGENSTRAT format, which - in our case - contains the following code:\n\n0 -> Allele 1 (the “alternative allele”)\n2 -> Allele 2 (the “reference allele”)\n9 -> Missing data\n\n\n\n\n\n\n\nNote\n\n\n\nTechnically, the format also contains 1 for heterozygous genotypes, but the data we analyse here is “pseudo-haploid”, so represents only one allele for each individual.\n\n\nExercise: Obviously, the genotype file contains the right number of columns (four) for the four individuals we have. Check that it also contains the right number of rows, i.e. the same number that you obtained above using the wc command."
  },
  {
    "objectID": "exercises/exercise_2_1_abba_baba.html#exploring-neanderthal-human-genetic-similarity",
    "href": "exercises/exercise_2_1_abba_baba.html#exploring-neanderthal-human-genetic-similarity",
    "title": "Exercise 2.1: Abba Baba test",
    "section": "Exploring Neanderthal-human genetic similarity",
    "text": "Exploring Neanderthal-human genetic similarity\nGiven that we now have a large number of genotypes at our hands, between Neanderthals and modern humans, we can ask a very simple question: Is the Neanderthal genome genetically more similar to one of the two modern humans than the other?\nTo answer this, we need to count in how many positions the Neanderthal matches each of the two modern human genomes. And to make this more meaningful, we focus on genetic variants which are different from Chimpanzee, i.e. mutations which appeared along the human lineage since the split from Chimpanzee.\nWe first select from the genotype file the relevant columns. For example, to select genotypes from the US-individual (first column), Neanderthal (third column) and Chimnpanzee (fourth column) we can use the command cut -c1,3,4, like this:\n\ncut -c1,3,4 data/Abba_Baba_dataset/Abba_Baba_dataset.geno | head\n\n009\n099\n099\n009\n090\n000\n092\n999\n909\n009\n\n\n\n\n\n\n\n\nNote\n\n\n\nPiping a result of a computation into head is a very common trick in exploratory data analysis in the shell. It avoids a super-long output. Here, we just would like to see the first ten lines of the result to see whether it’s working as expected.\n\n\nOK, this looks good. Now we have to filter lines at which the two genotypes in Neanderthal and Human are similar, but different from Chimpanzee. In other words, we are looking for two possible patterns in the three individuals: 002 or 220. We use the command grep, and then count the lines, using wc:\n\ncut -c1,3,4 data/Abba_Baba_dataset/Abba_Baba_dataset.geno | grep -e 002 -e 220 | wc -l\n\n   65283\n\n\nExercise: Repeat the same exercise for the Nigerian individual (which is in column 2 instead of column 1 of the genotype file). You should get 61933.\nComparing the two numbers, we see that the US individual shares around 3000 more variants with the Croatian Neanderthal than the Nigerian individual does (65283 vs 61933)."
  },
  {
    "objectID": "exercises/exercise_2_1_abba_baba.html#the-abba-baba-test",
    "href": "exercises/exercise_2_1_abba_baba.html#the-abba-baba-test",
    "title": "Exercise 2.1: Abba Baba test",
    "section": "The ABBA-BABA test",
    "text": "The ABBA-BABA test\nThe analysis that we did above is very similar to what has been called the ABBA-BABA test in the population genetic literature (Green et al. (2010)). Specifically, when considering the quadruple of individuals as above, in the order:\n\nOutgroup (such as Chimp)\nNeanderthal\nIndividual with Non-African ancestry\nIndividual with African ancestry\n\nwe consider two types of allelic patterns, ABBA and BABA. The four letters refer to the alleles in the four individuals, and A and B simply denote the two alleles. The two patterns correspond to the above computed similarities of derived variants from Chimp:\n\nABBA -> Here, the Non-African, but not the African, shares the derived allele with Neanderthal\nBABA -> Here, the African, but not the Non-African, shares the derived allele with Neanderthal.\n\nGreen et al. (2010) then defined a simple statistic:\n\\[\nD = \\frac{n_{ABBA} - n_{BABA}}{n_{ABBA} + n_{BABA}}.\n\\]\nExercise: Above we have computed counts of the slightly simpler pattern AAB in their two realisations 002 and 220. To compute the D-Statistic, we need to operate on all four individuals, where ABBA is realised by 0220 and 2002, and BABA is realised by 2020 and 0202. Compute the count of ABBA and BABA using the above grep pipeline. You should get \\(n_{ABBA} = 21787\\) and \\(n_{BABA} = 20250\\).\nExercise: Open an R console to compute the D-Statistic itself, using the two numbers. The number you get is a (very rough) estimate of the admixture proportion of Neanderthal ancestry in modern humans with Non-African ancestry today."
  },
  {
    "objectID": "exercises/exercise_3_1_PCA.html",
    "href": "exercises/exercise_3_1_PCA.html",
    "title": "Principal Component Plots",
    "section": "",
    "text": "In this exercise, we will explore two Principal Components analyses of human genetic variation in Eurasia.\nWe again need two libraries loaded:\nLet’s load the two data files:\nThe first column contains the name of each individual, the second and third the first and second principal component, and the last row a group label. To load this dataset with R, we use the readr::read_table function.\nExercise: Look at the two datasets by clicking on them under the Environment tab in the upper right pane in RStudio.\nWe can quickly plot the first two PCs for all individuals:\nwhich is not very helpful, because we can’t see where each population falls. We can highlight a few populations to get a bit more of a feeling:\nTask: The details of this code aren’t too important. But you can probably easily see how to add more groups to highlight. Browse through the group names in the dataset (which you know how to do from the previous task) and pick a few more to highlight. Find out which populations mark the cornerstones of this PCA."
  },
  {
    "objectID": "exercises/exercise_3_1_PCA.html#showing-all-populations",
    "href": "exercises/exercise_3_1_PCA.html#showing-all-populations",
    "title": "Principal Component Plots",
    "section": "Showing all populations",
    "text": "Showing all populations\nOK, but how do we systematically show all the populations? There are too many of those to separate them all by different colors, or by different symbols, so we need to combine colours and symbols and use all the combinations of them to show all the populations.\n\npopulations <- readr::read_csv(\"data/WestEurasia.poplist.txt\", col_names = F)$X1\n\n\npcaDat %>%\n  dplyr::filter(Group %in% populations) %>%\n  ggplot() +\n  geom_point(aes(\n    x = PC1, y = PC2, \n    color = Group, shape = Group\n  )) + \n  scale_shape_manual(values = rep(0:18, len = 57)) + \n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "exercises/exercise_3_1_PCA.html#adding-ancient-populations",
    "href": "exercises/exercise_3_1_PCA.html#adding-ancient-populations",
    "title": "Principal Component Plots",
    "section": "Adding ancient populations",
    "text": "Adding ancient populations\nOf course, until now we haven’t yet included any of the actual ancient test individuals that we want to analyse.\nWe add the following ancient populations to this plot:\n\nLevanluhta (two individuals from Finland from the first millenium AD)\nBolshoyOleniOstrov (a group of 3500 year old individuals from Northern Russia).\nWHG (short for Western Hunter-Gatherers, about 8000 years ago)\nLBK_EN (short for Linearbandkeramik Early Neolithic, from about 6,000 years ago)\nYamnaya_Samara, a late Neolithic population from the Russian Steppe, about 4,800 years ago.\n\nThe first two populations are from a publication on ancient Fennoscandian genomes (Lamnidis et al. (2018)), and are instructive to understand what PCA can be used for. The latter three populations are from two famous publications (Lazaridis et al. (2014), Haak et al. (2015)). It can be shown that modern European genetic diversity is formed by a mix of three ancestries represented by these ancient groups. To highlight these ancient populations, we plot them in black and using different symbols. While we’re at it, we should also add the population called “Saami.DG”:\n\nancient_populations <-  c(\"Levanluhta\", \"BolshoyOleniOstrov\", \"WHG\", \"LBK_EN\", \"Yamnaya_Samara\", \"Saami.DG\") \n\nggplot() +\n  geom_point(\n    data = pcaDat %>% dplyr::filter(Group %in% populations),\n    mapping = aes(\n      x = PC1, y = PC2, \n      color = Group, shape = Group\n    )\n  ) + \n  geom_point(\n    data = pcaDat %>% dplyr::filter(Group %in% ancient_populations),\n    mapping = aes(\n      x = PC1, y = PC2\n    ),\n    color = \"black\", shape = 15\n  ) + \n  ggrepel::geom_label_repel(\n    data = pcaDat %>% dplyr::filter(Group %in% ancient_populations) %>%\n      dplyr::group_by(Group) %>%\n      dplyr::summarise(PC1 = mean(PC1), PC2 = mean(PC2)),\n    mapping = aes(\n      x = PC1, y = PC2, label = Group\n    )\n  ) +\n  scale_shape_manual(values = rep(0:14, len = 57)) +\n  theme(legend.position = \"bottom\")\n\n\n\n\nOK, so what are we looking at? This is quite a rich plot, of course, and we won’t discuss all the details here. I just want to highlight two things. First, you can see that most present-day Europeans are scattered in a relatively tight space in the center of a triangle span up by the WHG on the lower left, LBK_EN on the lower right (seen from European points) and by Yamnaya_Samara (top). Indeed, a widely-accepted model for present-day Europeans assumes these three ancient source populations for all Europeans (Lazaridis et al. (2014), Haak et al. (2015)).\nThe second thing that is noteworthy here is that present-day people from Northeastern Europe, such as Finns, Saami and other Uralic speaking populations are “dragged” towards the ancient samples form Bolshoy Oleni Ostrov. Indeed, a recent model published by us assumes that “Siberian” genetic ancestry entered Europe around 4000 years ago as a kind of fourth genetic component on top of the three other components discusseda bove, and is nowadays found in most Uralic speakers in Europe, including Finns, Saami and Estonians."
  },
  {
    "objectID": "exercises/exercise_3_1_PCA.html#all-eurasian-pca",
    "href": "exercises/exercise_3_1_PCA.html#all-eurasian-pca",
    "title": "Principal Component Plots",
    "section": "All-Eurasian PCA",
    "text": "All-Eurasian PCA\nWe can make a similar plot using the all-Eurasian PCA that we have run:\n\npopulations <- readr::read_csv(\"data/AllEurasia.poplist.txt\", col_names = F)$X1\n\n\nggplot() +\n  geom_point(\n    data = pcaDat2 %>% dplyr::filter(Group %in% populations),\n    mapping = aes(\n      x = PC1, y = PC2, \n      color = Group, shape = Group\n    )\n  ) + \n  geom_point(\n    data = pcaDat2 %>% dplyr::filter(Group %in% ancient_populations),\n    mapping = aes(\n      x = PC1, y = PC2\n    ),\n    color = \"black\", shape = 15\n  ) + \n  ggrepel::geom_label_repel(\n    data = pcaDat2 %>% dplyr::filter(Group %in% ancient_populations) %>%\n      dplyr::group_by(Group) %>%\n      dplyr::summarise(PC1 = mean(PC1), PC2 = mean(PC2)),\n    mapping = aes(\n      x = PC1, y = PC2, label = Group\n    )\n  ) +\n  scale_shape_manual(values = rep(0:14, len = 108)) +\n  theme(legend.position = \"bottom\")\n\n\n\n\nThis PCA looks quite different. Here, we have all Western-Eurasian groups squished together on the left side of the plot, and on the right we have East-Asian populations. The plot roughly reflects Geography, with Northern East-Asian people such as the Nganasan on the top-right, and Southern East-Asian people like the Taiwanese Ami on the lower right. Here we can now see that the ancient samples from Russia and Finnland, as well as present-day Uralic populations are actually distributed between East and West, contrary to most other Europeans. This confirms that these group in Europe have quite a distinctive East-Asian genetic ancestry, and we found that it is best represented by the Nganasan (Lamnidis et al. (2018))."
  },
  {
    "objectID": "exercises/solution_1_1_alignment.html",
    "href": "exercises/solution_1_1_alignment.html",
    "title": "Ancient DNA Data Analysis - Workshop Uni Siegen 2022",
    "section": "",
    "text": "Mismatch A -> G               Mismatch G->C\n                             |                             |\n                             |                             |\n                             V                             V\nAACACTTGGTCACTGGGGTTTACACTGGTACACTGGACTACCCTGGGTACACTGACTACGACTACGACTACGTTTACCCCAATTT\n                 GTTTACACTGGTGCACTGGACTACCCTG\n                     ACACTGGTGCACTGGACTACCCTGGGTACACTGACTAC\n                         TGGTGCACTGGACTACCCTGGGTACACT\n                                   GACTACCCTGGGTACACTGACTACCA\n                                             GGTACACTGACTACCACTACGACTACGTT"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ancient DNA Data Analysis - Workshop Uni Siegen 2022",
    "section": "",
    "text": "Welcome to the Website for the “Ancient DNA Data Analysis” workshop."
  },
  {
    "objectID": "index.html#learning-objectives",
    "href": "index.html#learning-objectives",
    "title": "Ancient DNA Data Analysis - Workshop Uni Siegen 2022",
    "section": "Learning objectives",
    "text": "Learning objectives"
  },
  {
    "objectID": "index.html#rstudio-cloud",
    "href": "index.html#rstudio-cloud",
    "title": "Ancient DNA Data Analysis - Workshop Uni Siegen 2022",
    "section": "RStudio-Cloud",
    "text": "RStudio-Cloud\nOur interactive exercises are done in RStudio-Cloud.\nIn order to join our “classroom” workspace, you need to follow this link. Then follow these steps:\n\nClick on “Sign up” to create a free account, or, if you already have an account, simply log in\nIn the workshop space, you should now see “Join Space?” -> Click “YES”\nIn the top menu, click on “Projects”\nYou should see a project named “Ancient_DNA_Workshop_Sept_2022”. Click on “Start” right next to it.\nYou should now see something like this:"
  },
  {
    "objectID": "index.html#local-install",
    "href": "index.html#local-install",
    "title": "Ancient DNA Data Analysis - Workshop Uni Siegen 2022",
    "section": "Local Install",
    "text": "Local Install\nTODO"
  },
  {
    "objectID": "index.html#day-1-tue-sept-6",
    "href": "index.html#day-1-tue-sept-6",
    "title": "Ancient DNA Data Analysis - Workshop Uni Siegen 2022",
    "section": "Day 1, Tue, Sept 6",
    "text": "Day 1, Tue, Sept 6\n\n\n\n\n\n\nNote\n\n\n\nEventually, I will link the slides here, but they are not ready for public yet\n\n\n\n\n\n\n\n\n\nTime\nActivity\n\n\n\n\n13:30 - 15:00\nIntroduction\n\n\n15:00 - 15:30\nCoffee break\n\n\n16:00 - 19:00\nPart 1: Sequencing Data"
  },
  {
    "objectID": "index.html#day-2-wed-sept-7",
    "href": "index.html#day-2-wed-sept-7",
    "title": "Ancient DNA Data Analysis - Workshop Uni Siegen 2022",
    "section": "Day 2, Wed, Sept 7",
    "text": "Day 2, Wed, Sept 7\n\n\n\n\n\n\n\nTime\nActivity\n\n\n\n\n08:30 - 9:30\nPart 2: Neandertals and ghosts\n\n\n9:30 - 10:00\nCoffee break\n\n\n10:00 - 12:00\nPart 2: Neandertals and ghosts (cont.)\n\n\n12:00 - 13:00\nLunch break\n\n\n13:00 - 15:00\nPart 3: Human history during the last 10,000 years"
  },
  {
    "objectID": "index.html#solutions",
    "href": "index.html#solutions",
    "title": "Ancient DNA Data Analysis - Workshop Uni Siegen 2022",
    "section": "Solutions",
    "text": "Solutions\n\nSolution 1.1"
  }
]